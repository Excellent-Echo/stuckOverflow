"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _reactRouter = require("react-router");

var _LoadingContext = require("./LoadingContext");

var _LoadingMiddleware = _interopRequireDefault(require("./LoadingMiddleware"));

var _DefaultLoadingScreen = _interopRequireDefault(require("./DefaultLoadingScreen"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var LoadingSwitchLogic = function LoadingSwitchLogic(_ref) {
  var children = _ref.children,
      LoadingScreen = _ref.loadingScreen,
      context = _objectWithoutProperties(_ref, ["children", "loadingScreen"]);

  var loadingContext = (0, _react.useContext)(_LoadingContext.LoadingContext);
  var isLoading = (0, _react.useContext)(_LoadingContext.LoadingGetterContext);
  var location = (0, _reactRouter.useLocation)();

  var findMatchRoute = function findMatchRoute(location) {
    var element, match, loading; // We use React.Children.forEach instead of React.Children.toArray().find()
    // here because toArray adds keys to all child elements and we do not want
    // to trigger an unmount/remount for two <Route>s that render the same
    // component at different URLs.

    _react["default"].Children.forEach(children, function (child) {
      if (match == null && /*#__PURE__*/_react["default"].isValidElement(child)) {
        element = child;
        loading = child.props.loading;
        var path = child.props.path || child.props.from;
        match = (0, _reactRouter.matchPath)(location.pathname, _objectSpread(_objectSpread({}, child.props), {}, {
          path: path
        }));
      }
    });

    return {
      location: location,
      context: context,
      loading: match ? loading : false,
      component: match ? /*#__PURE__*/_react["default"].cloneElement(element, {
        location: location,
        computedMatch: match
      }) : null
    };
  };

  var _useState = (0, _react.useState)(function () {
    var firstRoute = findMatchRoute(location); //if first page uses loading then show loading screen

    //if first page uses loading then show loading screen
    return firstRoute.loading ? {
      location: "loading",
      context: context,
      component: LoadingScreen ? /*#__PURE__*/_react["default"].createElement(LoadingScreen, {
        location: location
      }) : /*#__PURE__*/_react["default"].createElement(_DefaultLoadingScreen["default"], {
        location: location
      })
    } : firstRoute;
  }),
      _useState2 = _slicedToArray(_useState, 2),
      currentRoute = _useState2[0],
      setCurrentRoute = _useState2[1];

  var _useState3 = (0, _react.useState)(currentRoute),
      _useState4 = _slicedToArray(_useState3, 2),
      nextRoute = _useState4[0],
      setNextRoute = _useState4[1]; //when location changed


  (0, _react.useEffect)(function () {
    var route = findMatchRoute(location); //if not the same route mount it to start loading

    if (route.location.pathname !== nextRoute.location.pathname) {
      setNextRoute(route);

      if (!route.loading) {
        loadingContext.done();
        setCurrentRoute(route);
      } else {
        if (!isLoading) {
          loadingContext.start();
        } else {
          loadingContext.skip();
        }
      }
    } //if same as current route stop loading


    if (route.location.pathname === currentRoute.location.pathname) {
      loadingContext.done();

      if (route.location.search !== currentRoute.location.search) {
        setCurrentRoute(route);
      }
    }
  }, [location]); //when loading ends

  (0, _react.useEffect)(function () {
    if (!isLoading && nextRoute.location.pathname !== currentRoute.location.pathname) {
      setCurrentRoute(nextRoute);
    }
  }, [isLoading]); //memo and current and next components

  return (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_react.Fragment, null, /*#__PURE__*/_react["default"].createElement("div", {
      key: currentRoute.location.pathname
    }, /*#__PURE__*/_react["default"].createElement(_reactRouter.__RouterContext.Provider, {
      value: currentRoute.context
    }, /*#__PURE__*/_react["default"].createElement(_react.Suspense, {
      fallback: null
    }, currentRoute.component))), nextRoute.location.pathname !== currentRoute.location.pathname && /*#__PURE__*/_react["default"].createElement("div", {
      key: nextRoute.location.pathname,
      style: {
        display: 'none'
      }
    }, /*#__PURE__*/_react["default"].createElement(_reactRouter.__RouterContext.Provider, {
      value: currentRoute.context
    }, /*#__PURE__*/_react["default"].createElement(_react.Suspense, {
      fallback: null
    }, nextRoute.component))));
  }, [currentRoute, nextRoute]);
}; //combine topbar and switch


var LoadingSwitch = function LoadingSwitch(_ref2) {
  var children = _ref2.children,
      loadingScreen = _ref2.loadingScreen;
  return /*#__PURE__*/_react["default"].createElement(_LoadingMiddleware["default"], null, /*#__PURE__*/_react["default"].createElement(_reactRouter.__RouterContext.Consumer, null, function (context) {
    return /*#__PURE__*/_react["default"].createElement(LoadingSwitchLogic, _extends({}, context, {
      loadingScreen: loadingScreen
    }), children);
  }));
};

var _default = LoadingSwitch;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,